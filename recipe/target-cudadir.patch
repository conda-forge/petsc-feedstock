diff --git a/config/BuildSystem/config/packages/CUDA.py b/config/BuildSystem/config/packages/CUDA.py
index 2a845a505c7..5139712d04b 100644
--- a/config/BuildSystem/config/packages/CUDA.py
+++ b/config/BuildSystem/config/packages/CUDA.py
@@ -326,9 +326,14 @@ class Configure(config.package.Package):
         nvccDir = os.path.dirname(self.systemNvcc) # /path/bin
         d = os.path.dirname(nvccDir) # /path
         # d might be /to/Linux_x86_64/21.7/cuda or /to/Linux_x86_64/21.7/cuda/12.2, check if math_libs exist. If yes, we are using NVHPC
-        if os.path.exists(os.path.join(d,'..','math_libs')) or os.path.exists(os.path.join(d,'..','..','math_libs')):
+        if 'CUDA_CONDA_TARGET_NAME' in os.environ:
+          conda_cuda_target = os.environ['CUDA_CONDA_TARGET_NAME']
+          conda_cuda_dir = os.environ['CUDA_CONDA_HOME']
+          if os.path.exists(os.path.join(conda_cuda_dir,'targets',conda_cuda_target,'include','cuda.h')): # Conda Build
+            self.cudaDir = d
+        elif os.path.exists(os.path.join(d,'..','math_libs')) or os.path.exists(os.path.join(d,'..','..','math_libs')):
           self.isnvhpc = 1
-        if os.path.exists(os.path.join(d,'include','cuda.h')): # CUDAToolkit with a structure /path/{bin/nvcc, include/cuda.h}
+        elif os.path.exists(os.path.join(d,'include','cuda.h')): # CUDAToolkit with a structure /path/{bin/nvcc, include/cuda.h}
           self.cudaDir = d
         elif os.path.exists(os.path.normpath(os.path.join(d,'..','cuda','include','cuda.h'))): # could be NVHPC
           self.cudaDir = os.path.normpath(os.path.join(d,'..','cuda')) # get rid of .. in path, getting /path/Linux_x86_64/21.5/cuda
